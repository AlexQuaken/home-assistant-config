vacuum:
  - platform: xiaomi_miio
    host: !secret roborock_host
    token: !secret roborock_token
    name: Roborock
  - platform: template
    vacuums:
      roomba:
        value_template: "{% if is_state('binary_sensor.roomba', 'on') %}cleaning{% else %}docked{% endif %}"
        start:
          - service: switch.turn_on
            data:
              entity_id: switch.roomba_vacuum
        stop:
          - service: switch.turn_off
            data:
              entity_id: switch.roomba_vacuum
        # return_to_base:
            # service: script.vacuum_return_to_base

ios:
  push:
    categories:
      - name: Vacuum Today
        identifier: 'vacuum'
        actions:
          - identifier: 'VACUUM_DOWNSTAIRS'
            title: 'Downstairs'
            authenticationRequired: yes
            behavior: 'default'
          - identifier: 'VACUUM_UPSTAIRS'
            title: 'Upstairs'
            authenticationRequired: yes
            behavior: 'default'
          - identifier: 'VACUUM_BOTH'
            title: 'Everywhere'
            authenticationRequired: yes
            behavior: 'default'
          - identifier: 'VACUUM_STOP_ASKING'
            title: 'Not today'
            activationMode: 'background'
            destructive: yes

input_boolean:
  vacuum_downstairs_scheduled:
    name: Vacuum Downstairs Scheduled
  vacuum_upstairs_scheduled:
    name: Vacuum Upstairs Scheduled
  ad_vacuum_schedule:
    name: Vacuuming Schedule

sensor:
  - platform: template
    sensors:
      vacuums:
        friendly_name: 'Vacuums'
        entity_id: vacuum.roomba, vacuum.roborock
        value_template: >-
          {% if is_state('vacuum.roomba', 'docked') and is_state("vacuum.roborock", "docked") %}
            Docked
          {% elif is_state('vacuum.roomba', 'idle') and is_state("vacuum.roborock", "idle") %}
            Idle
          {% elif is_state('vacuum.roomba', 'cleaning') and is_state("vacuum.roborock", "cleaning") %}
            Cleaning
          {% elif is_state('vacuum.roomba', 'cleaning') %}
            Upstairs
          {% elif is_state('vacuum.roborock', 'cleaning') %}
            Downstairs
          {% elif is_state('vacuum.roomba', 'returning') or is_state("vacuum.roborock", "returning") %}
            Returning
          {% elif is_state('vacuum.roomba', 'error') and is_state("vacuum.roborock", "error") %}
            Error
          {% else %}
            Unknown
          {% endif %}

switch:
  - platform: broadlink
    friendly_name: Broadlink Hallway
    host: !secret broadlink_roomba_ip
    mac: !secret broadlink_roomba_mac
    switches:
      roomba_vacuum:
        friendly_name: Roomba Vacuum
        command_on: 'JgD8AGEgIV8gXyBfXCIhXyBfIAACoGIfIGAfYB9gXSIfYR5hHgACol8iHmIdYh1iXCIfYR5hHgACo2EgHmEfYR1iXCIeYh1iHQACq2AhH2EeYR9gXCMfYB9gHwAComAhH2AfYR9gXCIgYB9gHwACoWAiH2AfYB9gXCMfYB9hHgAComAhH2EeYR5hXCIgYCBfIAACoGEgIGAfYB9gXSIfYR5hHgACql8jHWIdYh1iXCMeYR5hHgACo18iHmEeYh1iXCIeYh1iHQACo18jHWIdYh5hXSIeYh1iHQACo18jHWIdYh1iXCIfYR5hHgACq18iHmEeYh1iXCIeYh1iHgANBQAAAAAAAAAAAAAAAA=='
        command_off: 'JgCQAGAhHmIfYB9gH2BdIh5iXAACbGAhHmIeYR5hH2BdIh5iXAACZGAhHmIeYR5hH2BdIh5iXAACZGEhH2AfYB9gIF9eISBgXgACYl8iIGAfYB9gH2BfICBgXgACamEhH2AfYB9gH2BfICBgXgACYmEgIGAfYCBfIF9cIx9hXAACZGAhHmIeYR5hH2BdIh5iXAANBQAAAAAAAAAA'
      # roomba_dock:
      #   friendly_name: Roomba Dock
      #   command_on: 'JgA2AF8iHmIdYh1iHWJcIh5iXAACbF8iIGAeYh1iHWJeICBgXQACY18iIGAeYh1iHWJeICBgXgANBQAA'
      #   command_off: 'JgCQAGAhHmIfYB9gH2BdIh5iXAACbGAhHmIeYR5hH2BdIh5iXAACZGAhHmIeYR5hH2BdIh5iXAACZGEhH2AfYB9gIF9eISBgXgACYl8iIGAfYB9gH2BfICBgXgACamEhH2AfYB9gH2BfICBgXgACYmEgIGAfYCBfIF9cIx9hXAACZGAhHmIeYR5hH2BdIh5iXAANBQAAAAAAAAAA'

input_select:
  roomba_mode:
    name: Roomba
    options:
     - 'Waiting'
     - 'Vacuum Now'
     - 'Vacuuming'
     - 'Has Vacuumed'
     - 'Dock'
     - 'Not Today'
    icon: mdi:robot-vacuum

# automation:
  # - alias: '[House] Vacuum Ask In The Morning'
  #   initial_state: 'on'
  #   trigger:
  #     platform: time
  #     at: "06:45:00"
  #   condition:
  #     condition: and
  #     conditions:
  #       - condition: state
  #         entity_id: calendar.cleaning_day
  #         state: 'off'
  #   action:
  #     - service: notify.mobile_app_isabella_s_iphone_x
  #       data:
  #         message: 'Where do you want to vacuum?'
  #         title: 'Vacuuming'
  #         data:
  #           push:
  #             category: "vacuum"


  # - alias: '[House] Vacuum Downstairs Selected'
  #   initial_state: 'on'
  #   trigger:
  #     platform: event
  #     event_type: ios.notification_action_fired
  #     event_data:
  #       actionName: VACUUM_DOWNSTAIRS
  #   action:
  #     - service: vacuum.start
  #       entity_id: vacuum.roborock
  #     - service: notify.mobile_app_isabella_s_iphone_x
  #       data:
  #         message: 'Telling Roborock to start vacuuming'

  # - alias: '[House] Vacuum Upstairs Selected'
  #   initial_state: 'on'
  #   trigger:
  #     platform: event
  #     event_type: ios.notification_action_fired
  #     event_data:
  #       actionName: VACUUM_UPSTAIRS
  #   action:
  #     - service: vacuum.start
  #       entity_id: vacuum.roomba
  #     - service: input_select.select_option
  #       data:
  #         entity_id: input_select.roomba_mode
  #         option: 'Vacuuming'
  #     - service: notify.mobile_app_isabella_s_iphone_x
  #       data:
  #         message: 'Telling Roomba to start vacuuming'

  # - alias: '[House] Vacuum Both Selected'
  #   initial_state: 'on'
  #   trigger:
  #     platform: event
  #     event_type: ios.notification_action_fired
  #     event_data:
  #       actionName: VACUUM_BOTH
  #   action:
  #     - service: vacuum.start
  #       entity_id: vacuum.roomba
  #     - service: input_select.select_option
  #       data:
  #         entity_id: input_select.roomba_mode
  #         option: 'Vacuuming'
  #     - service: vacuum.start
  #       entity_id: vacuum.roborock
  #     - service: notify.mobile_app_isabella_s_iphone_x
  #       data:
  #         message: 'Telling Roomba and Roborock to start vacuuming'

  # ## Reset the vacuumed today check each night
  # - alias: '[House] Vacuum Reset At Midnight'
  #   initial_state: 'on'
  #   trigger:
  #     platform: time
  #     at: '23:59:00'
  #   action:
  #     - service: input_select.select_option
  #       data:
  #         entity_id: input_select.roomba_mode
  #         option: 'Waiting'
  #     - service: homeassistant.turn_off
  #       entity_id: switch.roomba

  # - alias: '[House] Vacuum Now'
  #   initial_state: 'on'
  #   trigger:
  #     platform: state
  #     entity_id: input_select.roomba_mode
  #     to: 'Vacuum Now'
  #   action:
  #     - service: vacuum.start
  #       entity_id: vacuum.roomba
